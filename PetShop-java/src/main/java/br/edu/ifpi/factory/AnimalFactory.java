package br.edu.ifpi.factory;

import br.edu.ifpi.Model.Animal;
import br.edu.ifpi.Model.Cachorro;
import br.edu.ifpi.Model.Gato;

/**
 * üè≠ Factory Method para cria√ß√£o de Animais
 * Padr√£o de Projeto: Factory Method
 * 
 * Vantagens:
 * - Encapsula a l√≥gica de cria√ß√£o de objetos
 * - Facilita a adi√ß√£o de novos tipos de animais
 * - Reduz acoplamento no c√≥digo cliente
 */
public class AnimalFactory {
    
    /**
     * Cria um animal baseado na esp√©cie informada
     * 
     * @param especie tipo do animal (cachorro, gato, etc)
     * @param nome nome do animal
     * @param idade idade do animal
     * @param raca ra√ßa do animal
     * @return inst√¢ncia de Animal (Cachorro ou Gato)
     * @throws IllegalArgumentException se a esp√©cie n√£o for suportada
     */
    public static Animal criarAnimal(String especie, String nome, int idade, String raca) {
        if (especie == null || especie.trim().isEmpty()) {
            throw new IllegalArgumentException("Esp√©cie n√£o pode ser vazia");
        }
        
        return switch (especie.toLowerCase().trim()) {
            case "cachorro", "dog", "cao" -> new Cachorro(nome, idade, raca);
            case "gato", "cat", "felino" -> new Gato(nome, idade, raca);
            default -> throw new IllegalArgumentException(
                "Esp√©cie n√£o suportada: " + especie + 
                ". Op√ß√µes v√°lidas: cachorro, gato"
            );
        };
    }
    
    /**
     * Verifica se uma esp√©cie √© suportada pela factory
     * 
     * @param especie tipo do animal
     * @return true se a esp√©cie √© suportada, false caso contr√°rio
     */
    public static boolean especieSuportada(String especie) {
        if (especie == null || especie.trim().isEmpty()) {
            return false;
        }
        
        String especieLower = especie.toLowerCase().trim();
        return especieLower.equals("cachorro") || 
               especieLower.equals("dog") || 
               especieLower.equals("cao") ||
               especieLower.equals("gato") || 
               especieLower.equals("cat") || 
               especieLower.equals("felino");
    }
}
